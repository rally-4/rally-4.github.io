const Worley={distancing2:function(t,n,o,e){let r=!0;for(l of t)Math.hypot(n-l[0],o-l[1])<=e&&(r=!1);return r},distancing3:function(t,n,o,e,r){let h=!0;for(l of t)Math.hypot(n-l[0],o-l[1],e-l[2])<=r&&(h=!1);return h},map2:function(t,n,o,e,r){let l=[];for(let h=0;h<t;h+=o)for(let t=-n;t<n;t+=o)Math.random()<e&&(l[0]?Worley.distancing2(l,h,t,r)&&(l.push([h,t])):l.push([h,t]));return l},map3:function(t,n,o,e,r,l){let h=[];for(let i=-t;i<t;i+=e)for(let t=-n;t<n;t+=e)for(let n=-o;n<o;n+=e)Math.random()<r&&(h[0]?Worley.distancing3(h,i,t,n,l)&&(h.push([i,t,n])):h.push([i,t,n]));return h},noise2:function(t,n,o){let e=[1024];for(let r=0;r<t.length;r++)e.push(Math.hypot(n-t[r][0],o-t[r][1]));return Math.min(...e)},noise3:function(t,n,o,e){let r=[1024];for(let l=0;l<t.length;l++)r.push(Math.hypot(n-t[l][0],o-t[l][1],e-t[l][2]));return Math.min(...r)}}
